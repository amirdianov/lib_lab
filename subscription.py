




import logging
import sqlite3
import time
from typing import Any

from telegram import Update, ForceReply, ReplyKeyboardMarkup
from telegram.ext import Updater, CommandHandler, ConversationHandler, MessageHandler, CommandHandler, Filters, \
    CallbackContext, PrefixHandler
from db_func import get_items

from registration import check_registration


def activated_subscription(user_id):
    """use db, u can make this method not static, how u can - make"""
    if get_items('activity', 'subscription', 'telegram_id', user_id)[0] == 1:
        return True
    else:
        return False


def renew_dates_user(self: Update, context: CallbackContext):
    """methods renew dates of subscription, if its ended"""
    return True


def subscription_user(self: Update, context: Any):
    "take information from db and make object of Subscription class"
    user_id = self.message.from_user.id
    if not check_registration(user_id):  # –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å
        self.message.reply_text('‚ùå –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –Ω–∞—à–µ–π —Å–∏—Å—Ç–µ–º–µ ‚ùå \n'
                                '–ü—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤–∑—è—Ç–∏—è –∫–Ω–∏–≥–∏ üíª')
        return False
    else:
        if activated_subscription(user_id):
            # –≤–µ—Ç–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
            ...
        else:
            # –≤–µ—Ç–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
            # –¥–æ–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é
            ...
    # subscription = Subscription(User.find_subscription())
    self.message.reply_text('–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –∏–ª–∏ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞ - –≤–æ–ø—Ä–æ—Å')
