import logging
import re
import sqlite3
import time
from typing import Any

from telegram import Update, ForceReply, ReplyKeyboardMarkup
from telegram.ext import Updater, CommandHandler, ConversationHandler, MessageHandler, CommandHandler, Filters, \
    CallbackContext, PrefixHandler
from db_func import add_item, update_items, get_items


def check_registration(user_id: int) -> bool:
    """u can make this method not static, how u can - make"""
    ans = get_items('registration', 'Users', 'telegram_id', user_id)[0]
    if ans != 0:
        return True
    return False


def begin_registration_user(update: Update, context: Any):
    """make people to registred and insert to db"""
    """use ConversationHandler to insert user for db"""
    if check_registration(update.message.from_user.id):
        update.message.reply_text('–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µüëç')
        return False
    else:
        update.message.reply_text('–î–∞–≤–∞–π—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è üìù.\n–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–∏ —Ñ–∞–º–∏–ª–∏—é –∏ –∏–º—è —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.\n'
                                  '–î–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã: –∑–∞–≥–ª–∞–≤–Ω—ã–µ –∏ —Å—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã –∫–∏—Ä–∏–ª–ª–∏—Ü—ã –∏ –ø—Ä–æ–±–µ–ª.\n'
                                  '–ù–∞–ø—Ä–∏–º–µ—Ä, –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω.üòâ')
        return True


def registration_handle_user_data(update: Update, context: Any):
    """handle user data and insert it into db"""
    context.user_data['name_surname']: str = update.message.text.strip().title()
    re_expression: str = re.search(r'[–ê-–Ø–∞-—è]+ +[–ê-–Ø–∞-—è]+', context.user_data['name_surname'])
    if re_expression is None or re_expression.group() != \
            context.user_data['name_surname']:
        update.message.reply_text('–§–∞–º–∏–ª–∏—è –∏ –∏–º—è –≤–≤–µ–¥–µ–Ω—ã –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ ‚õîÔ∏èüò™\n'
                                  'üîÑ –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º –≤–≤–µ—Å—Ç–∏ –∏—Ö –∑–∞–Ω–æ–≤–æ, –Ω–æ —Å–Ω–∞—á–∞–ª–∞ —è –Ω–∞–ø–æ–º–Ω—é –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –≤–≤–æ–¥–∞:\n'
                                  '–î–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã: –∑–∞–≥–ª–∞–≤–Ω—ã–µ –∏ —Å—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã –∫–∏—Ä–∏–ª–ª–∏—Ü—ã –∏ –ø—Ä–æ–±–µ–ª.\n'
                                  '–ù–∞–ø—Ä–∏–º–µ—Ä, –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω.üòâ')
        return False
    fullname: str = context.user_data['name_surname']
    fullname = fullname[:fullname.find(' ')] + \
               fullname[fullname.rfind(' '):]
    context.user_data['name_surname'] = fullname
    update_items('users', 'name_surname', 'telegram_id', context.user_data['name_surname'],
                 update.message.from_user.id)
    update_items('users', 'registration', 'telegram_id', True,
                 update.message.from_user.id)
    update.message.reply_text('‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ.\n'
                              f'{context.user_data["name_surname"]}, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å '
                              f'–≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –Ω–∞—à–µ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏! üéÜ')
    return True
